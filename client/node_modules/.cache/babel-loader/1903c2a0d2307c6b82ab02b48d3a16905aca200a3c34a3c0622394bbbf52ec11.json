{"ast":null,"code":"import { createAction } from \"../../utils/reducer/reducer.utils\";\nimport { CART_ACTION_TYPES } from \"./cart.types\";\nexport const addToCartWrap = (cartItems, itemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id == itemToAdd.id);\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id == itemToAdd.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n  return [...cartItems, {\n    ...itemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeFromCartWrap = (cartItems, itemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id == itemToRemove.id);\n  if (existingCartItem) {\n    if (existingCartItem.quantity === 1) {\n      return cartItems.filter(cartItem => cartItem.id != existingCartItem.id);\n    }\n    return cartItems.map(cartItem => {\n      if (cartItem.id == itemToRemove.id) return {\n        ...cartItem,\n        quantity: cartItem.quantity - 1\n      };else return cartItem;\n    });\n  }\n};\nexport const addToCart = (cartItems, itemToAdd) => {\n  console.log('cartItems, ', cartItems, ' ', itemToAdd);\n  console.log('addToCartWr ', addToCartWrap(cartItems, itemToAdd));\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, addToCartWrap(cartItems, itemToAdd));\n};\nexport const removeFromCart = (cartItems, itemToRemove) => {\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, removeFromCartWrap(cartItems, itemToRemove));\n};\nexport const setCartIsOpen = isCartOpen => {\n  return createAction(CART_ACTION_TYPES.SET_CART_IS_OPEN, !isCartOpen);\n};","map":{"version":3,"names":["createAction","CART_ACTION_TYPES","addToCartWrap","cartItems","itemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeFromCartWrap","itemToRemove","filter","addToCart","console","log","SET_CART_ITEMS","removeFromCart","setCartIsOpen","isCartOpen","SET_CART_IS_OPEN"],"sources":["/home/ztarknap/Documents/vinylStore_revamp/client/src/store/cart/cart.action.js"],"sourcesContent":["import { createAction } from \"../../utils/reducer/reducer.utils\"\nimport { CART_ACTION_TYPES } from \"./cart.types\"\n\n\nexport const addToCartWrap = (cartItems, itemToAdd) => {\n    const existingCartItem = cartItems.find(\n        (cartItem) => cartItem.id == itemToAdd.id)\n     \n     if(existingCartItem) {\n         return cartItems.map((cartItem) =>\n         cartItem.id == itemToAdd.id\n         ? {...cartItem, quantity: cartItem.quantity +1}\n         : cartItem\n         );\n     }\n     \n     return   [...cartItems, {...itemToAdd, quantity: 1}] \n}\n\nexport const removeFromCartWrap = (cartItems, itemToRemove) => {\n    const existingCartItem = cartItems.find(\n        (cartItem) => cartItem.id == itemToRemove.id)\n        \n     \n     if(existingCartItem) {\n\n        if(existingCartItem.quantity===1) \n        {return cartItems.filter((cartItem)=> cartItem.id != existingCartItem.id)}\n\n         return cartItems.map((cartItem) =>   {  \n            if(cartItem.id == itemToRemove.id)\n            return  {...cartItem, quantity: cartItem.quantity -1} \n            else \n            return cartItem \n            }\n         );\n     }\n     \n}\n\nexport const addToCart = (cartItems, itemToAdd) => {\n    console.log('cartItems, ', cartItems, ' ', itemToAdd);\n    console.log('addToCartWr ', addToCartWrap(cartItems, itemToAdd));\n    return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, addToCartWrap(cartItems, itemToAdd));\n}\n\nexport const removeFromCart = (cartItems, itemToRemove) => {\n    return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, removeFromCartWrap(cartItems, itemToRemove));\n}\n\nexport const setCartIsOpen = (isCartOpen) => {\n    return createAction(CART_ACTION_TYPES.SET_CART_IS_OPEN, !isCartOpen);\n}"],"mappings":"AAAA,SAASA,YAAY,QAAQ,mCAAmC;AAChE,SAASC,iBAAiB,QAAQ,cAAc;AAGhD,OAAO,MAAMC,aAAa,GAAGA,CAACC,SAAS,EAAEC,SAAS,KAAK;EACnD,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAI,CAClCC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,IAAIJ,SAAS,CAACI,EAAE,CAAC;EAE7C,IAAGH,gBAAgB,EAAE;IACjB,OAAOF,SAAS,CAACM,GAAG,CAAEF,QAAQ,IAC9BA,QAAQ,CAACC,EAAE,IAAIJ,SAAS,CAACI,EAAE,GACzB;MAAC,GAAGD,QAAQ;MAAEG,QAAQ,EAAEH,QAAQ,CAACG,QAAQ,GAAE;IAAC,CAAC,GAC7CH,QACF,CAAC;EACL;EAEA,OAAS,CAAC,GAAGJ,SAAS,EAAE;IAAC,GAAGC,SAAS;IAAEM,QAAQ,EAAE;EAAC,CAAC,CAAC;AACzD,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAGA,CAACR,SAAS,EAAES,YAAY,KAAK;EAC3D,MAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAI,CAClCC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,IAAII,YAAY,CAACJ,EAAE,CAAC;EAGhD,IAAGH,gBAAgB,EAAE;IAElB,IAAGA,gBAAgB,CAACK,QAAQ,KAAG,CAAC,EAChC;MAAC,OAAOP,SAAS,CAACU,MAAM,CAAEN,QAAQ,IAAIA,QAAQ,CAACC,EAAE,IAAIH,gBAAgB,CAACG,EAAE,CAAC;IAAA;IAExE,OAAOL,SAAS,CAACM,GAAG,CAAEF,QAAQ,IAAO;MAClC,IAAGA,QAAQ,CAACC,EAAE,IAAII,YAAY,CAACJ,EAAE,EACjC,OAAQ;QAAC,GAAGD,QAAQ;QAAEG,QAAQ,EAAEH,QAAQ,CAACG,QAAQ,GAAE;MAAC,CAAC,MAErD,OAAOH,QAAQ;IACf,CACH,CAAC;EACL;AAEL,CAAC;AAED,OAAO,MAAMO,SAAS,GAAGA,CAACX,SAAS,EAAEC,SAAS,KAAK;EAC/CW,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEb,SAAS,EAAE,GAAG,EAAEC,SAAS,CAAC;EACrDW,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEd,aAAa,CAACC,SAAS,EAAEC,SAAS,CAAC,CAAC;EAChE,OAAOJ,YAAY,CAACC,iBAAiB,CAACgB,cAAc,EAAEf,aAAa,CAACC,SAAS,EAAEC,SAAS,CAAC,CAAC;AAC9F,CAAC;AAED,OAAO,MAAMc,cAAc,GAAGA,CAACf,SAAS,EAAES,YAAY,KAAK;EACvD,OAAOZ,YAAY,CAACC,iBAAiB,CAACgB,cAAc,EAAEN,kBAAkB,CAACR,SAAS,EAAES,YAAY,CAAC,CAAC;AACtG,CAAC;AAED,OAAO,MAAMO,aAAa,GAAIC,UAAU,IAAK;EACzC,OAAOpB,YAAY,CAACC,iBAAiB,CAACoB,gBAAgB,EAAE,CAACD,UAAU,CAAC;AACxE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}