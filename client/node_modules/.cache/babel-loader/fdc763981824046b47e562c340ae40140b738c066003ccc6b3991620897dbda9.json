{"ast":null,"code":"var _jsxFileName = \"/home/ztarknap/Documents/vinylStore_revamp/client/src/routes/shop/categories-main.component.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, Fragment, useEffect } from 'react';\nimport { ItemCard } from '../../components/item-card/item-card.component';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCategories } from '../../store/categories/categories.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CategoriesMain = () => {\n  _s();\n  const genresList = ['Rock', 'Pop', 'Jazz', 'Classical', 'Hip hop'];\n  const categoriesData = useSelector(state => state.categories.categoriesData);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    fetch(\"/api/items\").then(res => res.json()).then(data => {\n      console.log(data);\n      dispatch(setCategories(data));\n    });\n  }, []);\n  console.log('Object.keys(categoriesData)', Object.keys(categoriesData));\n  console.log(' categorr', categoriesData);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: Object.keys(categoriesData).map(genre => {\n      console.log('genre ', genre);\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: genre.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"products-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }, this)]\n      }, genre.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(CategoriesMain, \"RK3eC/WngXn/JWpnkexYfgQB+S4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = CategoriesMain;\nvar _c;\n$RefreshReg$(_c, \"CategoriesMain\");","map":{"version":3,"names":["useContext","Fragment","useEffect","ItemCard","useDispatch","useSelector","setCategories","jsxDEV","_jsxDEV","CategoriesMain","_s","genresList","categoriesData","state","categories","dispatch","fetch","then","res","json","data","console","log","Object","keys","children","map","genre","name","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/ztarknap/Documents/vinylStore_revamp/client/src/routes/shop/categories-main.component.jsx"],"sourcesContent":["import { useContext, Fragment, useEffect } from 'react'\nimport { ItemCard } from '../../components/item-card/item-card.component';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCategories } from '../../store/categories/categories.action';\n\nexport const CategoriesMain = () => {\n    const genresList = ['Rock','Pop','Jazz','Classical','Hip hop'];\n    const categoriesData = useSelector((state) =>  state.categories.categoriesData )\n    const dispatch = useDispatch();\n    useEffect(() => {\n         \n      fetch(\"/api/items\")\n      .then((res) => res.json())\n      .then((data) => { console.log(data); dispatch(setCategories(data));});\n       \n      }, []);\n      console.log('Object.keys(categoriesData)', Object.keys(categoriesData));\n            console.log(' categorr', categoriesData);\n      return (\n        <Fragment>\n           \n            {  \n             \n               Object.keys(categoriesData).map((genre)=> { console.log('genre ', genre);return (\n                <Fragment key={genre.name}>\n                  <h2>{genre.name}</h2>\n                  <div className='products-container'>\n                    {/*categoriesData[name].map((product) => (\n                      <ItemCard key={product.id} product={product}/>\n                    ))*/}\n                  </div>\n                  </Fragment>)\n              }) \n            }\n          \n  \n   \n        </Fragment>\n      )\n    }"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACvD,SAASC,QAAQ,QAAQ,gDAAgD;AACzE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,aAAa,QAAQ,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,UAAU,GAAG,CAAC,MAAM,EAAC,KAAK,EAAC,MAAM,EAAC,WAAW,EAAC,SAAS,CAAC;EAC9D,MAAMC,cAAc,GAAGP,WAAW,CAAEQ,KAAK,IAAMA,KAAK,CAACC,UAAU,CAACF,cAAe,CAAC;EAChF,MAAMG,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9BF,SAAS,CAAC,MAAM;IAEdc,KAAK,CAAC,YAAY,CAAC,CAClBC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MAAEC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAAEL,QAAQ,CAACT,aAAa,CAACc,IAAI,CAAC,CAAC;IAAC,CAAC,CAAC;EAErE,CAAC,EAAE,EAAE,CAAC;EACNC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEC,MAAM,CAACC,IAAI,CAACZ,cAAc,CAAC,CAAC;EACjES,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEV,cAAc,CAAC;EAC9C,oBACEJ,OAAA,CAACP,QAAQ;IAAAwB,QAAA,EAIFF,MAAM,CAACC,IAAI,CAACZ,cAAc,CAAC,CAACc,GAAG,CAAEC,KAAK,IAAI;MAAEN,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEK,KAAK,CAAC;MAAC,oBACxEnB,OAAA,CAACP,QAAQ;QAAAwB,QAAA,gBACPjB,OAAA;UAAAiB,QAAA,EAAKE,KAAK,CAACC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBxB,OAAA;UAAKyB,SAAS,EAAC;QAAoB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAI9B,CAAC;MAAA,GANOL,KAAK,CAACC,IAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOb,CAAC;IACf,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKE,CAAC;AAEf,CAAC;AAAAtB,EAAA,CAlCQD,cAAc;EAAA,QAEAJ,WAAW,EACjBD,WAAW;AAAA;AAAA8B,EAAA,GAHnBzB,cAAc;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}