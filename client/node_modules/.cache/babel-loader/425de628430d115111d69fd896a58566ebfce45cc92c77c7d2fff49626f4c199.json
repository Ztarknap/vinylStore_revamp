{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from 'firebase/firestore';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA0jl5TQ3JQoquDMRf775x67tU2lRGvBNM\",\n  authDomain: \"vinylstore-ca650.firebaseapp.com\",\n  projectId: \"vinylstore-ca650\",\n  storageBucket: \"vinylstore-ca650.appspot.com\",\n  messagingSenderId: \"725486002220\",\n  appId: \"1:725486002220:web:8071dbf464eb80a4beb189\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInGoogle = () => signInWithPopup(auth, provider);\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","provider","setCustomParameters","prompt","auth","signInGoogle","signOutUser","onAuthStateChangedListener","callback"],"sources":["/home/ztarknap/Documents/vinylStore_revamp/client/src/utils/firebase.util.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport {getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signOut, onAuthStateChanged} from 'firebase/auth';\nimport {\n    getFirestore,\n    doc,\n    getDoc,\n    setDoc,\n    collection,\n    writeBatch,\n    query,\n    getDocs\n} from 'firebase/firestore'\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA0jl5TQ3JQoquDMRf775x67tU2lRGvBNM\",\n  authDomain: \"vinylstore-ca650.firebaseapp.com\",\n  projectId: \"vinylstore-ca650\",\n  storageBucket: \"vinylstore-ca650.appspot.com\",\n  messagingSenderId: \"725486002220\",\n  appId: \"1:725486002220:web:8071dbf464eb80a4beb189\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n\nconst provider = new GoogleAuthProvider();\n\nprovider.setCustomParameters({\n    prompt: \"select_account\"\n});\n\nexport const auth = getAuth();\nexport const signInGoogle = () => signInWithPopup(auth, provider);\nexport const signOutUser = async() => await signOut(auth);  \nexport const onAuthStateChangedListener = (callback) => onAuthStateChanged(auth, callback);"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAAQC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,8BAA8B,EAAEC,OAAO,EAAEC,kBAAkB,QAAO,eAAe;AAC3J,SACIC,YAAY,EACZC,GAAG,EACHC,MAAM,EACNC,MAAM,EACNC,UAAU,EACVC,UAAU,EACVC,KAAK,EACLC,OAAO,QACJ,oBAAoB;;AAE3B;AACA;;AAEA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,kCAAkC;EAC9CC,SAAS,EAAE,kBAAkB;EAC7BC,aAAa,EAAE,8BAA8B;EAC7CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGvB,aAAa,CAACgB,cAAc,CAAC;AAGzC,MAAMQ,QAAQ,GAAG,IAAIpB,kBAAkB,CAAC,CAAC;AAEzCoB,QAAQ,CAACC,mBAAmB,CAAC;EACzBC,MAAM,EAAE;AACZ,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAG1B,OAAO,CAAC,CAAC;AAC7B,OAAO,MAAM2B,YAAY,GAAGA,CAAA,KAAMzB,eAAe,CAACwB,IAAI,EAAEH,QAAQ,CAAC;AACjE,OAAO,MAAMK,WAAW,GAAG,MAAAA,CAAA,KAAW,MAAMvB,OAAO,CAACqB,IAAI,CAAC;AACzD,OAAO,MAAMG,0BAA0B,GAAIC,QAAQ,IAAKxB,kBAAkB,CAACoB,IAAI,EAAEI,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}